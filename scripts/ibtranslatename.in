#!/usr/bin/perl
#
#  Copyright (C) 2011 The Regents of the University of California.
#  Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
#  Written by Ira Weiny weiny2@llnl.gov
#  UCRL-CODE-235440
#  
#  This file is part of pragmatic-infiniband-tools (PIU), useful tools to manage
#  Infiniband Clusters.
#  For details, see http://www.llnl.gov/linux/.
#  
#  PIU is free software; you can redistribute it
#  and/or modify it under the terms of the GNU General Public License as
#  published by the Free Software Foundation; either version 2 of the License,
#  or (at your option) any later version.
#  
#  PIU is distributed in the hope that it will be
#  useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
#  Public License for more details.
#  
#  You should have received a copy of the GNU General Public License along with
#  PIU; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
#

use strict;

use lib '@PIU_SBIN_PATH@';
use PIUHostlist;
use PIUTranslate;

use Getopt::Std;

# =========================================================================
#
sub usage_and_exit
{
   my $prog = $_[0];
   print "Usage: $prog [-hf] [-s <c>] <name>\n";
   print "   Translate cononical name to IB name\n";
   print "   -f translate \"from\" IB name to cononical name\n";
   print "   -s <char> use <char> to separate results: default ','\n";
   exit 0;
}

my $argv0 = `basename $0`;
chomp $argv0;

my $from = "no";
my $list = "no";
my $sep = ",";
if (!getopts("hfc:")) { usage_and_exit $argv0; }
if (defined $Getopt::Std::opt_h) { usage_and_exit $argv0; }
if (defined $Getopt::Std::opt_f) { $from = "yes"; }
if (defined $Getopt::Std::opt_c) { $sep = $Getopt::Std::opt_c; }

my $names = $ARGV[0];
my $trans = "";

PIUTranslate::translate_load("@PIU_CONFIG_PATH@/pragmaticIB/piutranslate.conf");

my @name_array = PIUHostlist::expand($names);

foreach my $name (@name_array) {
	my $tmp = "";
	if ($trans ne "") {
		$trans="$trans$sep";
	}
	if ($from eq "yes") {
		$tmp=PIUTranslate::translate_from($name);
	} else {
		$tmp=PIUTranslate::translate_to($name);
	}
	$trans="$trans$tmp";
}

print "$trans\n";


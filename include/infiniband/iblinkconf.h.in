/*
 * Copyright (C) 2010 Lawrence Livermore National Security
 * Produced at Lawrence Livermore National Laboratory (cf, DISCLAIMER).
 * Written by Ira Weiny weiny2@llnl.gov
 * UCRL-CODE-235440
 * 
 * This file is part of pragmatic-infiniband-tools (PIU), useful tools to manage
 * Infiniband Clusters.
 * For details, see http://www.llnl.gov/linux/.
 * 
 * PIU is free software; you can redistribute it
 * and/or modify it under the terms of the GNU General Public License as
 * published by the Free Software Foundation; either version 2 of the License,
 * or (at your option) any later version.
 * 
 * PIU is distributed in the hope that it will be
 * useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
 * Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License along with
 * PIU; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA.
 *
 */

#ifndef _IBLINKCONF_H_
#define _IBLINKCONF_H_

#define IBLINK_CONFIG_DIR "@PIU_CONFIG_PATH@/pragmaticIB"
#define IBLINK_DEF_CONFIG "@PIU_CONFIG_PATH@/pragmaticIB/iblinkconf.xml"

/* These are opaque data types */
typedef struct iblink_conf iblink_conf_t;
typedef struct iblink_port iblink_port_t;
typedef struct iblink_prop iblink_prop_t;
typedef struct iblink_port_list iblink_port_list_t;

/* alloc new config */
iblink_conf_t *iblink_alloc_conf(void);
void iblink_free(iblink_conf_t *linkconf);
void iblink_set_stderr(iblink_conf_t *linkconf, FILE *f); /* user owns f */
void iblink_set_warn_dup(iblink_conf_t *linkconf, int warn_dup);

/* populate config from file specified */
int iblink_parse_file(char *file, iblink_conf_t *linkconf);
	/* iblink_parse_file will clear ports previously contained
	 * in linkconf */

/* Accessor functions */
/* config */
char *iblink_conf_get_name(iblink_conf_t *conf);

/* get port functions */
iblink_port_t *iblink_get_port(iblink_conf_t *linkconf, char *name, int p_num);

int iblink_get_port_list(iblink_conf_t *linkconf, char *name,
			iblink_port_list_t **list);
	/* allocates memory must call iblink_free_port_list */
void iblink_free_port_list(iblink_port_list_t *port_list);

/* port */
char *iblink_port_get_name(iblink_port_t *port);
int   iblink_port_get_port_num(iblink_port_t *port);
iblink_prop_t *iblink_port_get_prop(iblink_port_t *port);
iblink_port_t *iblink_port_get_remote(iblink_port_t *port);
void  iblink_port_set_user(iblink_port_t *port, void *user_data);
void *iblink_port_get_user(iblink_port_t *port);

/* iter functions */
typedef void (*process_port_func)(iblink_port_t *port, void *user_data);
void iblink_iter_ports(iblink_conf_t *linkconf, process_port_func func,
                     void *user_data);
void iblink_iter_port_list(iblink_port_list_t *port_list,
			process_port_func func, void *user_data);

/* prop */
int iblink_prop_get_speed(iblink_prop_t *prop);
int iblink_prop_get_width(iblink_prop_t *prop);
char *iblink_prop_str(iblink_port_t *port, char ret[], unsigned n);

#endif /* _IBLINKCONF_H_ */

